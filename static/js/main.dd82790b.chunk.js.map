{"version":3,"sources":["logo.svg","components/Planet.js","components/OrbitLine.js","components/Moon.js","components/Interface.js","components/Space.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PlanetBody","styled","div","props","plaSiz","PlanetLight","sunDir","Planet","className","OrbitLineStyled","orbRad","OrbitLine","StyledMoon","orbPer","MoonBody","mooSiz","rotPer","MoonLight","MoonFace","Moon","Interface","setRotOrbPer","setOrbRad","setBodySize","setSunDirecttion","useState","rotationalPeriod","orbitalPeriod","orbitRadius","moonSize","planetSize","sunDirection","form","setForm","changeInputValue","useCallback","e","nextForm","target","name","value","onSubmit","preventDefault","Paper","TextField","id","label","type","variant","hintText","floatingLabelText","onChange","defaultValue","color","Button","initialSetting","settingReducer","setting","action","Space","useReducer","dispatchSetting","console","log","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd82790b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.300e0a62.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PlanetBody = styled.div`\r\n    position: absolute;\r\n    background-color: #54b7c7;\r\n    width: ${props => props.plaSiz + \"px\" || \"90px\"};\r\n    height: ${props => props.plaSiz + \"px\" || \"90px\"};\r\n    border-radius: ${props => props.plaSiz + \"px\" || \"90px\"};\r\n    top: calc(50% - ${props => props.plaSiz / 2 + \"px\" || \"45px\"});\r\n    left: calc(50% - ${props => props.plaSiz / 2 + \"px\" || \"45px\"});\r\n`;\r\n\r\nconst PlanetLight = styled.div`\r\n    position: absolute;\r\n    background: linear-gradient(\r\n        ${props => props.sunDir + \"deg\" || \"120deg\"},\r\n        rgba(255, 245, 210, 0.3) 0%,\r\n        rgba(255, 255, 255, 0.5) 30%,\r\n        rgba(255, 255, 255, 0.1) 50%,\r\n        rgba(30, 20, 20, 0.8) 100%\r\n    );\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n    top: 0;\r\n    left: 0;\r\n`;\r\n\r\nconst Planet = ({ plaSiz, sunDir }) => {\r\n    return (\r\n        <div className=\"planetContainer\">\r\n            <PlanetBody plaSiz={plaSiz}>\r\n                <PlanetLight sunDir={sunDir} />\r\n            </PlanetBody>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Planet;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst OrbitLineStyled = styled.div`\r\n  position: absolute;\r\n  border: 2px solid #333;\r\n  width: ${props => props.orbRad * 2 + \"px\" || \"150px\"};\r\n  height: ${props => props.orbRad * 2 + \"px\" || \"150px\"};\r\n  border-radius: ${props => props.orbRad * 2 + \"px\" || \"150px\"};\r\n  top: calc(50% -  ${props => (props.orbRad + 2) + \"px\" || \"50% - 75px\"});\r\n  left: calc(50% -  ${props => (props.orbRad + 2) + \"px\" || \"50% - 75px\"});\r\n`\r\n\r\nconst OrbitLine = ({orbRad}) => {\r\n  return (\r\n    <OrbitLineStyled orbRad={orbRad} />\r\n  );\r\n};\r\n\r\nexport default OrbitLine;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMoon = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    transform-origin: 50% 50%;\r\n    animation-name: MOON-REVOLUTION;\r\n    animation-duration: ${props => props.orbPer + \"s\" || \"0s\"};\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    @keyframes MOON-REVOLUTION {\r\n        0% {\r\n            transform: rotate(0deg)\r\n                translate(${props => props.orbRad + \"px\" || \"150px\"})\r\n                rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(-360deg)\r\n                translate(${props => props.orbRad + \"px\" || \"150px\"})\r\n                rotate(360deg);\r\n        }\r\n    }\r\n`;\r\n\r\nconst MoonBody = styled.div`\r\n    position: absolute;\r\n    background-color: #f6ff80;\r\n    width: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n    height: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n    border-radius: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n    top: calc(50% - ${props => props.mooSiz / 2 + \"px\" || \"15px\"});\r\n    left: calc(50% - ${props => props.mooSiz / 2 + \"px\" || \"15px\"});\r\n    transform-origin: 50% 50%;\r\n    animation-name: MOON-ROTATION;\r\n    animation-duration: ${props => props.rotPer + \"s\" || \"0s\"};\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    @keyframes MOON-ROTATION {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(-360deg);\r\n        }\r\n    }\r\n`;\r\n\r\nconst MoonLight = styled.div`\r\n    position: absolute;\r\n    background: linear-gradient(\r\n        ${props => props.sunDir + \"deg\" || \"120deg\"},\r\n        rgba(255, 245, 210, 0.3) 0%,\r\n        rgba(255, 255, 255, 0.5) 30%,\r\n        rgba(255, 255, 255, 0.1) 50%,\r\n        rgba(30, 20, 20, 0.8) 100%\r\n    );\r\n    width: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n    height: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n    overflow: hidden;\r\n    border-radius: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n    top: calc(50% - ${props => props.mooSiz / 2 + \"px\" || \"15px\"});\r\n    left: calc(50% - ${props => props.mooSiz / 2 + \"px\" || \"15px\"});\r\n`;\r\n\r\nconst MoonFace = styled.div`\r\n    width: 40%;\r\n    height: 20%;\r\n    position: absolute;\r\n    top: 35%;\r\n    left: -20%;\r\n    background-color: #fff;\r\n`;\r\n\r\nconst Moon = ({ rotPer, orbPer, orbRad, mooSiz, sunDir }) => {\r\n    return (\r\n        <StyledMoon orbPer={orbPer} orbRad={orbRad}>\r\n            <MoonBody rotPer={rotPer} mooSiz={mooSiz}>\r\n                <MoonFace></MoonFace>\r\n            </MoonBody>\r\n            <MoonLight mooSiz={mooSiz} sunDir={sunDir} />\r\n        </StyledMoon>\r\n    );\r\n};\r\n\r\nexport default Moon;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Interface = ({\r\n    rotPer,\r\n    orbPer,\r\n    orbRad,\r\n    mooSiz,\r\n    plaSiz,\r\n    sunDir,\r\n    setRotOrbPer,\r\n    setOrbRad,\r\n    setBodySize,\r\n    setSunDirecttion\r\n}) => {\r\n    const [form, setForm] = useState({\r\n        rotationalPeriod: rotPer,\r\n        orbitalPeriod: orbPer,\r\n        orbitRadius: orbRad,\r\n        moonSize: mooSiz,\r\n        planetSize: plaSiz,\r\n        sunDirection: sunDir\r\n    });\r\n\r\n    const changeInputValue = useCallback(\r\n        e => {\r\n            const nextForm = {\r\n                ...form,\r\n                [e.target.name]: e.target.value\r\n            };\r\n            setForm(nextForm);\r\n        },\r\n        [form]\r\n    );\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            setRotOrbPer(form.rotationalPeriod, form.orbitalPeriod);\r\n            setOrbRad(form.orbitRadius);\r\n            setBodySize(form.moonSize, form.planetSize);\r\n            setSunDirecttion(form.sunDirection);\r\n            e.preventDefault();\r\n        },\r\n        [setRotOrbPer, setOrbRad, setBodySize, setSunDirecttion, form]\r\n    );\r\n\r\n    return (\r\n        <Paper className=\"uiBox\">\r\n            <form onSubmit={onSubmit}>\r\n                <TextField\r\n                    id=\"rotationalPeriod\"\r\n                    name=\"rotationalPeriod\"\r\n                    label=\"Rotational Period\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    hintText=\"the time it takes for the moon to complete a rotation on its own axis\"\r\n                    floatingLabelText=\"Rotational Period\"\r\n                    onChange={changeInputValue}\r\n                    defaultValue={form.rotationalPeriod}\r\n                    color=\"inherit\"\r\n                />\r\n                <TextField\r\n                    id=\"orbitalPeriod\"\r\n                    name=\"orbitalPeriod\"\r\n                    label=\"Orbital Period\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    hintText=\"the time it takes for the moon to complete a revolution around the bigger body\"\r\n                    floatingLabelText=\"Orbital Period\"\r\n                    onChange={changeInputValue}\r\n                    defaultValue={form.orbitalPeriod}\r\n                    color=\"inherit\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    color=\"secondary\"\r\n                >\r\n                    SET\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Interface;\r\n","import React, { useReducer, useCallback } from \"react\";\r\nimport Planet from \"./Planet\";\r\nimport OrbitLine from \"./OrbitLine\";\r\nimport Moon from \"./Moon\";\r\nimport Interface from \"./Interface\";\r\nimport \"./Space.scss\";\r\n\r\nconst initialSetting = {\r\n    rotationalPeriod: 30,\r\n    orbitalPeriod: 30,\r\n    orbitRadius: 100,\r\n    moonSize: 30,\r\n    planetSize: 90,\r\n    sunDirection: 100\r\n};\r\n\r\nfunction settingReducer(setting, action) {\r\n    switch (action.type) {\r\n        case \"ROTATIONAL_PERIOD\":\r\n            return { ...setting, rotationalPeriod: action.rotPer };\r\n        case \"ORBITAL_PERIOD\":\r\n            return { ...setting, orbitalPeriod: action.orbPer };\r\n        case \"ORBIT_RADIUS\":\r\n            return { ...setting, orbitRadius: action.orbRad };\r\n        case \"MOON_SIZE\":\r\n            return { ...setting, moonSize: action.mooSiz };\r\n        case \"PLANET_SIZE\":\r\n            return { ...setting, planetSize: action.plaSiz };\r\n        case \"SUN_DIRECTION\":\r\n            return { ...setting, sunDirection: action.sunDir };\r\n        default:\r\n            return setting;\r\n    }\r\n}\r\n\r\nconst Space = () => {\r\n    const [setting, dispatchSetting] = useReducer(\r\n        settingReducer,\r\n        initialSetting\r\n    );\r\n\r\n    const setRotOrbPer = useCallback((rotPer, orbPer) => {\r\n        dispatchSetting({ type: \"ROTATIONAL_PERIOD\", rotPer });\r\n        dispatchSetting({ type: \"ORBITAL_PERIOD\", orbPer });\r\n    }, []);\r\n\r\n    const setOrbRad = useCallback(orbRad => {\r\n        dispatchSetting({ type: \"ORBIT_RADIUS\", orbRad });\r\n        console.log(orbRad);\r\n    }, []);\r\n\r\n    const setBodySize = useCallback((mooSiz, plaSiz) => {\r\n        dispatchSetting({ type: \"MOON_SIZE\", mooSiz });\r\n        dispatchSetting({ type: \"PLANET_SIZE\", plaSiz });\r\n    }, []);\r\n\r\n    const setSunDirecttion = useCallback(sunDir => {\r\n        dispatchSetting({ type: \"SUN_DIRECTION\", sunDir });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"spaceContainer\">\r\n            <Planet plaSiz={setting.planetSize} sunDir={setting.sunDirection} />\r\n            <OrbitLine orbRad={setting.orbitRadius} />\r\n            <Moon\r\n                rotPer={setting.rotationalPeriod}\r\n                orbPer={setting.orbitalPeriod}\r\n                orbRad={setting.orbitRadius}\r\n                mooSiz={setting.moonSize}\r\n                sunDir={setting.sunDirection}\r\n            />\r\n            <Interface\r\n                rotPer={setting.rotationalPeriod}\r\n                orbPer={setting.orbitalPeriod}\r\n                orbRad={setting.orbitRadius}\r\n                mooSiz={setting.moonSize}\r\n                plaSiz={setting.planetSize}\r\n                sunDir={setting.sunDirection}\r\n                setRotOrbPer={setRotOrbPer}\r\n                setOrbRad={setOrbRad}\r\n                setBodySize={setBodySize}\r\n                setSunDirecttion={setSunDirecttion}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Space;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.scss\";\r\nimport Space from \"./components/Space.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"logoImg\" alt=\"logo\" />\r\n        <h1 className=\"logoText\">Tidally Locked</h1>\r\n      </header>\r\n      <section className=\"App-body\">\r\n        <Space />\r\n      </section>\r\n      <footer className=\"App-footer\">copy</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}