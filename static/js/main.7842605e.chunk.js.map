{"version":3,"sources":["logo.svg","components/Interface.js","components/Planet.js","components/Moon.js","components/Space.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Interface","rotPer","orbPer","orbRad","mooSiz","plaSiz","setRotOrbPer","setOrbRad","setBodySize","useState","rotationalPeriod","orbitalPeriod","orbitRadius","moonSize","planetSize","form","setForm","changeInputValue","useCallback","e","nextForm","target","name","value","onSubmit","preventDefault","className","type","onChange","PlanetBody","styled","div","props","Planet","StyledMoon","MoonBody","MoonFace","Moon","initialSetting","settingReducer","setting","action","Space","useReducer","dispatchSetting","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7842605e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8b7e255d.svg\";","import React, { useState, useCallback } from \"react\";\r\n\r\nconst Interface = ({ rotPer, orbPer, orbRad, mooSiz, plaSiz, setRotOrbPer, setOrbRad, setBodySize }) => {\r\n  const [form, setForm] = useState({\r\n    rotationalPeriod: rotPer,\r\n    orbitalPeriod: orbPer,\r\n    orbitRadius: orbRad,\r\n    moonSize: mooSiz,\r\n    planetSize: plaSiz\r\n  });\r\n\r\n  const changeInputValue = useCallback(\r\n    e => {\r\n      const nextForm = {\r\n        ...form,\r\n        [e.target.name]: e.target.value\r\n      };\r\n      setForm(nextForm);\r\n    },\r\n    [form]\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      setRotOrbPer(form.rotationalPeriod, form.orbitalPeriod);\r\n      setOrbRad(form.orbitRadius);\r\n      setBodySize(form.moonSize, form.planetSize);\r\n      e.preventDefault();\r\n    },\r\n    [setRotOrbPer,setOrbRad,setBodySize, form]\r\n  );\r\n\r\n  return (\r\n    <div className=\"uiBox\">\r\n      <form onSubmit={onSubmit}>\r\n        Orbit radius :<br />\r\n        <input\r\n          type=\"number\"\r\n          name=\"orbitRadius\"\r\n          value={form.orbitRadius}\r\n          onChange={changeInputValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        Rotational period :<br />\r\n        <input\r\n          type=\"number\"\r\n          name=\"rotationalPeriod\"\r\n          value={form.rotationalPeriod}\r\n          onChange={changeInputValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        Orbital period :<br />\r\n        <input\r\n          type=\"number\"\r\n          name=\"orbitalPeriod\"\r\n          value={form.orbitalPeriod}\r\n          onChange={changeInputValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        Earth size :<br />\r\n        <input\r\n          type=\"number\"\r\n          name=\"planetSize\"\r\n          value={form.planetSize}\r\n          onChange={changeInputValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        Moon size :<br />\r\n        <input\r\n          type=\"number\"\r\n          name=\"moonSize\"\r\n          value={form.moonSize}\r\n          onChange={changeInputValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        <button type=\"submit\">SET</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Interface;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PlanetBody = styled.div`\r\n  position: absolute;\r\n  background-color: #54b7c7;\r\n  width: ${props => props.plaSiz + \"px\" || \"90px\"};\r\n  height: ${props => props.plaSiz + \"px\" || \"90px\"};\r\n  border-radius: ${props => props.plaSiz + \"px\" || \"90px\"};\r\n  top: calc(50% -  ${props => props.plaSiz/2 + \"px\" || \"45px\"});\r\n  left: calc(50% -  ${props => props.plaSiz/2 + \"px\" || \"45px\"});\r\n`\r\n\r\nconst Planet = ({plaSiz}) => {\r\n  return (\r\n    <div className=\"planetContainer\">\r\n      <PlanetBody plaSiz={plaSiz} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planet;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMoon = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform-origin: 50% 50%;\r\n  animation-name: MOON-REVOLUTION;\r\n  animation-duration: ${props => props.orbPer + \"s\" || \"0s\"};\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n  @keyframes MOON-REVOLUTION {\r\n    0% {\r\n      transform: rotate(0deg) translate(${props => props.orbRad + \"px\" || \"150px\"}) rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(-360deg) translate(${props => props.orbRad + \"px\" || \"150px\"}) rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst MoonBody = styled.div`\r\n  position: absolute;\r\n  background-color: #f6ff80;\r\n  width: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n  height: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n  overflow: hidden;\r\n  border-radius: ${props => props.mooSiz + \"px\" || \"30px\"};\r\n  top: calc(50% -  ${props => props.mooSiz/2 + \"px\" || \"15px\"});\r\n  left: calc(50% -  ${props => props.mooSiz/2 + \"px\" || \"15px\"});\r\n  transform-origin: 50% 50%;\r\n  animation-name: MOON-ROTATION;\r\n  animation-duration: ${props => props.rotPer + \"s\" || \"0s\"};\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n  @keyframes MOON-ROTATION {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(-360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst MoonFace = styled.div`\r\n  width: 40%;\r\n  height: 40%;\r\n  position: absolute;\r\n  top: 30%;\r\n  left: 0;\r\n  background-color: #b42e2e;\r\n`;\r\n\r\nconst Moon = ({ rotPer, orbPer, orbRad, mooSiz }) => {\r\n  return (\r\n    <StyledMoon orbPer={orbPer} orbRad={orbRad}>\r\n      <MoonBody rotPer={rotPer} mooSiz={mooSiz}>\r\n        <MoonFace></MoonFace>\r\n      </MoonBody>\r\n    </StyledMoon>\r\n  );\r\n};\r\n\r\nexport default Moon;\r\n","import React, { useReducer, useCallback } from \"react\";\r\nimport Interface from \"./Interface\";\r\nimport Planet from \"./Planet\";\r\nimport Moon from \"./Moon\";\r\nimport \"./Space.scss\";\r\n\r\nconst initialSetting = {\r\n    rotationalPeriod: 10,\r\n    orbitalPeriod: 10,\r\n    orbitRadius: 150,\r\n    moonSize: 30,\r\n    planetSize: 90,\r\n};\r\n\r\nfunction settingReducer(setting, action){\r\n  switch (action.type){\r\n    case 'ROTATIONAL_PERIOD':\r\n      return {...setting, rotationalPeriod : action.rotPer};\r\n    case 'ORBITAL_PERIOD':\r\n      return {...setting, orbitalPeriod : action.orbPer};\r\n    case 'ORBIT_RADIUS':\r\n      return {...setting, orbitRadius : action.orbRad};\r\n    case 'MOON_SIZE':\r\n      return {...setting, moonSize : action.mooSiz};\r\n    case 'PLANET_SIZE':\r\n        return {...setting, planetSize : action.plaSiz};\r\n    default :\r\n      return setting;\r\n  }\r\n}\r\n\r\nconst Space = () => {\r\n\r\n  const [setting, dispatchSetting] = useReducer(settingReducer, initialSetting);\r\n\r\n  const setRotOrbPer = useCallback((rotPer, orbPer) =>{\r\n    dispatchSetting({type: 'ROTATIONAL_PERIOD', rotPer});\r\n    dispatchSetting({type: 'ORBITAL_PERIOD', orbPer});\r\n  }, []\r\n  );\r\n\r\n  const setOrbRad = useCallback((orbRad) =>{\r\n    dispatchSetting({type: 'ORBIT_RADIUS', orbRad});\r\n  }, []\r\n  );\r\n\r\n  const setBodySize = useCallback((mooSiz, plaSiz) => {\r\n    dispatchSetting({type: 'MOON_SIZE', mooSiz});\r\n    dispatchSetting({type: 'PLANET_SIZE', plaSiz});\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"spaceContainer\">\r\n      <Planet\r\n        plaSiz={setting.planetSize}\r\n      />\r\n      <Moon \r\n        rotPer={setting.rotationalPeriod}\r\n        orbPer={setting.orbitalPeriod}\r\n        orbRad={setting.orbitRadius}\r\n        mooSiz={setting.moonSize}\r\n      />\r\n      <Interface\r\n        rotPer={setting.rotationalPeriod}\r\n        orbPer={setting.orbitalPeriod}\r\n        orbRad={setting.orbitRadius}\r\n        mooSiz={setting.moonSize}\r\n        plaSiz={setting.planetSize}\r\n        setRotOrbPer={setRotOrbPer}\r\n        setOrbRad={setOrbRad}\r\n        setBodySize={setBodySize}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Space;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.scss\";\r\nimport Space from \"./components/Space.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"logoImg\" alt=\"logo\" />\r\n        <h2 className=\"logoText\">Tidally Locked</h2>\r\n      </header>\r\n      <section className=\"App-body\">\r\n        <Space />\r\n      </section>\r\n      <footer className=\"App-footer\">copy</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}