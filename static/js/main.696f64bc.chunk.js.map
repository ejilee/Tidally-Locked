{"version":3,"sources":["logo.svg","components/Interface.js","components/Planet.js","components/Moon.js","components/Space.js","components/Space2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Interface","rotPer","orbPer","settingRotOrbPer","useState","form","setForm","changeInputValue","useCallback","e","nextForm","target","name","value","onSubmit","preventDefault","className","type","onChange","Planet","StyledMoon","styled","div","props","MoonBody","MoonFace","faceColor","Moon","Space","periods","setPeriods","console","log","newPeriods","Space2","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.696f64bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.20d32b74.svg\";","import React, { useState, useCallback } from \"react\";\r\nimport \"./Interface.scss\";\r\n\r\nconst Interface = ({ rotPer, orbPer, settingRotOrbPer }) => {\r\n  const [form, setForm] = useState({\r\n    rotPer: rotPer,\r\n    orbPer: orbPer\r\n  });\r\n\r\n  const changeInputValue = useCallback(\r\n    e => {\r\n      const nextForm = {\r\n        ...form,\r\n        [e.target.name]: e.target.value\r\n      };\r\n      setForm(nextForm);\r\n    },\r\n    [form]\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      settingRotOrbPer(form);\r\n      e.preventDefault();\r\n    },\r\n    [settingRotOrbPer, form]\r\n  );\r\n\r\n  return (\r\n    <div className=\"uiBox\">\r\n      <form onSubmit={onSubmit}>\r\n        Rotational period :<br />\r\n        <input\r\n          type=\"number\"\r\n          name=\"rotPer\"\r\n          value={form.rotPer}\r\n          onChange={changeInputValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        Orbital period :<br />\r\n        <input\r\n          type=\"number\"\r\n          name=\"orbPer\"\r\n          value={form.orbPer}\r\n          onChange={changeInputValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        <button type=\"submit\">SET</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Interface;\r\n","import React from \"react\";\r\n\r\nconst Planet = () => {\r\n  return (\r\n    <div className=\"planetContainer\">\r\n      <div className=\"planetBody\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planet;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst StyledMoon = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform-origin: 50% 50%;\r\n  animation-name: MOON-REVOLUTION;\r\n  animation-duration: ${props => props.orbPer + \"s\" || \"0s\"};\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n  @keyframes MOON-REVOLUTION {\r\n    0% {\r\n      transform: rotate(0deg) translate(150px) rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(-360deg) translate(150px) rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst MoonBody = styled.div`\r\n  position: absolute;\r\n  background-color: #ff3;\r\n  width: 30px;\r\n  height: 30px;\r\n  overflow: hidden;\r\n  border-radius: 30px;\r\n  top: calc(50% - 15px);\r\n  left: calc(50% - 15px);\r\n  transform-origin: 50% 50%;\r\n  animation-name: MOON-ROTATION;\r\n  animation-duration: ${props => props.rotPer + \"s\" || \"0s\"};\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n  @keyframes MOON-ROTATION {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(-360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst MoonFace = styled.div`\r\n  width: 40%;\r\n  height: 40%;\r\n  position: absolute;\r\n  top: 30%;\r\n  left: 0;\r\n  background-color: ${props => props.faceColor || \"#000\"};\r\n`;\r\n\r\nconst Moon = ({ rotPer, orbPer }) => {\r\n  return (\r\n    <StyledMoon orbPer={orbPer}>\r\n      <MoonBody rotPer={rotPer}>\r\n        <MoonFace faceColor=\"blue\"></MoonFace>\r\n      </MoonBody>\r\n    </StyledMoon>\r\n  );\r\n};\r\n\r\nexport default Moon;\r\n","import React, { useState } from \"react\";\r\nimport Interface from \"./Interface\";\r\nimport Planet from \"./Planet\";\r\nimport Moon from \"./Moon\";\r\nimport \"./Space.scss\";\r\n\r\nconst Space = () => {\r\n  const [periods, setPeriods] = useState({\r\n    rotPer: 5,\r\n    orbPer: 5\r\n  });\r\n  const settingRotOrbPer = form => {\r\n    console.log(\"beech\");\r\n    const newPeriods = {\r\n      rotPer: form.rotPer,\r\n      orbPer: form.orbPer\r\n    };\r\n    console.log(newPeriods);\r\n    setPeriods(newPeriods);\r\n  };\r\n  return (\r\n    <div className=\"spaceContainer\">\r\n      <Planet />\r\n      <Moon rotPer={periods.rotPer} orbPer={periods.orbPer} />\r\n      <Interface\r\n        rotPer={periods.rotPer}\r\n        orbPer={periods.orbPer}\r\n        settingRotOrbPer={settingRotOrbPer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Space;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Interface from \"./Interface\";\r\nimport Planet from \"./Planet\";\r\nimport Moon from \"./Moon\";\r\nimport \"./Space2.scss\";\r\n\r\nconst Space2 = () => {\r\n  const [periods, setPeriods] = useState({\r\n    rotPer: 10,\r\n    orbPer: 10\r\n  });\r\n  const settingRotOrbPer = form => {\r\n    console.log(\"beech\");\r\n    const newPeriods = {\r\n      rotPer: form.rotPer,\r\n      orbPer: form.orbPer\r\n    };\r\n    console.log(newPeriods);\r\n    setPeriods(newPeriods);\r\n  };\r\n  // const moveIt = useCallback(() => {\r\n  //   setInterval(() => {}, 500);\r\n  // }, []);\r\n  // moveIt();\r\n  return (\r\n    <div className=\"spaceContainer2\">\r\n      <Planet />\r\n      <Moon rotPer={periods.rotPer} orbPer={periods.orbPer} />\r\n      <Interface\r\n        rotPer={periods.rotPer}\r\n        orbPer={periods.orbPer}\r\n        settingRotOrbPer={settingRotOrbPer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Space2;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Space from \"./components/Space.js\";\nimport Space2 from \"./components/Space2.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"logoImg\" alt=\"logo\" />\n        <h2 className=\"logoText\">Tidally Locked</h2>\n      </header>\n      <section className=\"App-body\">\n        <h4>With CSS Animation</h4>\n        <Space />\n        <br />\n        <br />\n        <h4>With Javascript</h4>\n        <Space2 />\n      </section>\n      <footer className=\"App-footer\">copy</footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}